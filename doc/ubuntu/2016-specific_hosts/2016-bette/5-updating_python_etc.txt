
 Updating Python Etc.
======================
We are playing around with some python on bette, and want to have
our process down for when it comes time to upgrade the installations
on jane, barbara, and ava.

Running these commands on bette.
--------------------------------
We should be able to run these on other hosts.

Install Packages for Real Python Class
--------------------------------------
[ ] Upgrade python 3.5 to 3.6
    References:
      http://askubuntu.com/questions/865554/how-do-i-install-python-3-6-using-apt-get
      http://www.ubuntumaniac.com/2016/12/python-360-is-released-install-on.html
    As root:
      add-apt-repository ppa:jonathonf/python-3.6
      apt-get update
      apt-get install python3.6
[ ] Install npm to see the slides
    References:
      https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04
      ** Note:
      ** Using the first process on this page, To Install the Distro-Stable Version for Ubuntu
      ** If at some point we want a newer version,
      **    this page, and those following, offer steps on how to install the latest from a ppa
      http://tecadmin.net/install-latest-nodejs-npm-on-ubuntu/#
      - Featured snippets in search: https://support.google.com/webmasters/answer/6229325?hl=en
      https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions
      - I would tend to trust a process from nodejs.org (why is it not the featured snippet?)
    As root:
      apt-get update
      apt-get install -y nodejs
      apt-get install -y npm

Install sendmail for always_learning_python Project
---------------------------------------------------
We need sendmail so we can test using python to send emails:
Note that this fixes the following error:
    ConnectionRefusedError: [Errno 111] Connection refused
[ ] Install sendmail
    As root:
      apt-get update
      apt-get upgrade -y
      apt-get -y install sendmail
NOTE: Got the following warning when installing sendmail on bette
      (and all the others too, btw):
   "Warning: 3 database(s) sources
      were not found, (but were created)
      please investigate."
Tried googling this but did not see anything about how to fix it.

Install PostgreSQL Database for Storing SeeOurMinds.com Quiz Results
--------------------------------------------------------------------
References:
* https://www.digitalocean.com/community/tutorials/how-to-use-postgresql-with-your-django-application-on-ubuntu-16-04
* https://djangogirls.gitbooks.io/django-girls-tutorial-extensions/content/optional_postgresql_installation/
* https://wiki.postgresql.org/wiki/Detailed_installation_guides#General_Linux

[ ] Install postgres in ubuntu:
    As root:
      apt-get update
      dpkg-query --list python3-pip  # ii  python3-pip ...
      dpkg-query --list python3-dev  # ii  python3-dev ...
      dpkg-query --list libpq-dev    # dpkg-query: no packages found matching libpq-dev
      apt-get install libpq-dev postgresql postgresql-contrib
[ ] Enter the postgres shell:
    As root:
      su - postgres
      psql        # prompt changes
[ ] Use the postgres shell to create the user and database:
    In the postgres shell:
      CREATE USER seeourminds WITH PASSWORD 'abc123';            ## CREATE ROLE
      CREATE DATABASE django_test owner seeourminds;             ## CREATE DATABASE
      ALTER ROLE seeourminds SET client_encoding TO 'utf8';      ## ALTER ROLE
      ALTER ROLE seeourminds SET default_transaction_isolation TO 'read committed';
      ALTER ROLE seeourminds SET timezone TO 'MST';              ## ALTER ROLE
      \q      ## log out
[ ] Install python postgres "psycopg2" package globally:
    As root:
       pip3 install psycopg2
[ ] Verify installation of python postgres "psycopg2" package:
    As tomh:
      python3 -c "import psycopg2"    ## no errors means it worked
      python3
      >>> import psycopg2
      >>> psycopg2.__version__        ## '2.7.1 (dt dec pq3 ext lo64)'

Install PhpPgAdmin
------------------
References:
* https://www.howtoforge.com/tutorial/ubuntu-postgresql-installation/
* https://tecadmin.net/install-phppgadmin-in-ubuntu/

We are following the instructions in the first reference.
The second reference supports slightly stronger security measures.

** DO NOT FOLLOW THIS PROCEDURE ON PRODUCTION HOSTS **

[ ] Use psql to set a password for the postgres user:
    As root:
      su - postgres
      psql          ## 'psql (9.5.6)' and 'Type "help" for help.'
    At the 'postgres=#' prompt:
      postgres=# \password
      Enter new password:
      Enter it again:
[ ] Install phppgadmin in ubuntu:
    As root:
      apt-get update
      apt-get install -y phppgadmin
[ ] Configure apache:
    As root:
      cd /etc/apache2/conf-available/
      mkdir RCS
      ci -l phppgadmin.conf    ## 'Installed version.'
      vi phppgadmin.conf
    Make these edits (so that you can access from your browser):
    o Comment out the line `#Require local` (line 11)
    o Add the line `Allow From all` below that (line 12)
[ ] Configure phpPgAdmin:
    As root:
      cd /etc/phppgadmin/
      mkdir RCS
      ci -l config.inc.php     ## 'Installed version.'
      vi config.inc.php
    Make this edit (so you can login to phpPgAdmin with user postgres):
    o Find the line $conf['extra_login_security'] = true; and change the value to false
[ ] Restart apache and postgres:
    As root:
      systemctl restart postgresql
      systemctl restart apache2
[ ] Access in browser:
      http://127.0.0.1/phppgadmin/
      http://localhost/phppgadmin/
    Log in as 'postgres' , using password set above

Updating the Django Settings File:
----------------------------------
References:
* https://www.digitalocean.com/community/tutorials/how-to-use-postgresql-with-your-django-application-on-ubuntu-16-04
* https://djangogirls.gitbooks.io/django-girls-tutorial-extensions/content/optional_postgresql_installation/

[ ] Summary of commands to run to enter the postgres shell:
    As root:
      su - postgres
      psql
[ ] Summary of test db credentials:
    User/pwd: seeourminds/abc123
    DB: django_test
[ ] Update the settings.py file to use these values:
    Note: the two references use slightly different engins
        'ENGINE': 'django.db.backends.postgresql_psycopg2',  ## digital ocean
        'ENGINE': 'django.db.backends.postgresql',           ## djangogirls
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'django_test',
            'USER': 'seeourminds',
            'PASSWORD': 'abc123',
            'HOST': 'localhost',
            'PORT': '',
        }
    }


