#!/usr/bin/python3
#
# bu: backs up a mysql database
# -----------------------------
#
def syntax() :
	print( 'Syntax: TBD TBD TBD' )

import time     # for the date string in our backup file name
import socket   # for getting the hostName
import sys      # for accessing command line arguments


if ( len(sys.argv) == 1 ) :
	site = 'all'
elif ( len(sys.argv) == 2 ) :
	siteArg = sys.argv[1]
	site = siteArg
else :
	syntax()
	print( 'Wrong number of args.' )
	exit( 1 )


dbDataFile = '/home/tomh/bin/dbData.py'
exec( compile(open(dbDataFile,"rb").read(), dbDataFile, 'exec'), globals(), locals() )


dbName=''
dbUser=''
dbPass=''
hostName = socket.gethostname()
siteName = site

#
# If we don't have a password, the -p arg to mysql causes it to prompt them for it
#
if ( dbPass == '' ) :
	passwordArg = '-p'
else :
	passwordArg = '--password=' + dbPass

#
# If we don't have a specific user, we know that the root user will always be there
#
if ( dbUser == '' ) :
   dbUser = 'root'

backupDir = '~/backup/db/'
dateString = time.strftime( '-%Y_%m_%d' )
backupFileName = backupDir + '/' + site + '-' + hostName + dateString + '.tgz'

print( 'site = ', site )
print( 'siteName = ', siteName )
print( 'dbName = ', dbName )
print( 'dbUser = ', dbUser )
print( 'dbPass = ', dbPass )
print( 'passwordArg = ', passwordArg )
print( 'hostName = ', hostName )
print( 'dateString = ', dateString )
print( 'backupFileName = ', backupFileName )

print( 'Backing up ', siteName, ' site DB to ', backupFileName, '...' )

## mysqldump --quick --opt -u root -p${password} $dbname | gzip > backupFileName

