#!/usr/bin/python3
#
# bu: backs up a mysql database
# -----------------------------
#
import os       # for getting values for environment vars
import sys      # for accessing command line arguments
from subprocess import call

#
# Import the functions that we share with dbMySqlRestore
# Process the command line arguments
#
import dbFunctions
arguments = dbFunctions.processArguments( 'backup' )
siteArg = arguments[0]
suffixArg = arguments[1]

##############################################################
#
#  Run the Top Secret Db Credentials File to set the credential-containing globals dbNames, dbUsers, dbPasswords.
#  For best results, this file should be "locked down"
#  1. Define the DB_CREDENTIALS_FILE environment variable in your .bash_profile
#  2. Have it reference a file similar to dbCredentialsFileExample.py in your home directory
#  3. Set this file's permissions to 700
#  Never ever ever check this top secret file in to a public repository,
#     else people will be able to hack your DB!!!!
#  For more information, see the comments in dbCredentialsFileExample.py
#
dbNames = {}
dbUsers = {}
dbPasswords = {}
siteName = siteArg

dbCredentialsFile = dbFunctions.getDbCredentialsFile()
exec( compile(open(dbCredentialsFile,"rb").read(), dbCredentialsFile, 'exec'), globals(), locals() )

dbName = dbNames[siteName]
dbUser = dbUsers[siteName]
dbPass = dbPasswords[siteName]

##############################################################

#
# If we don't have a password, the -p arg to mysql causes it to prompt them for it
#
if ( dbPass == '' ) :
	passwordArg = '-p'
else :
	passwordArg = '--password=' + dbPass

#
# If we don't have a specific user, we know that the root user will always be there
#
if ( dbUser == '' ) :
   dbUser = 'root'

dbBackupDirectory = dbFunctions.getDbBackupDirectory()
dbBackupFileBaseName = dbFunctions.getDbBackupFileBaseName( siteName, suffixArg )
dbBackupFileFullName = dbBackupDirectory + '/' + dbBackupFileBaseName

backupCommand = 'mysqldump --quick --opt -u ' + dbUser + ' ' + passwordArg + ' ' + dbName + ' | gzip > ' + dbBackupFileFullName
chmodCommand = 'chmod 600 ' + dbBackupFileFullName

print( 'siteArg = ', siteArg )
print( 'siteName = ', siteName )
### print( 'suffixArg = ', suffixArg )
### print( 'suffixString = ', suffixString )
print( 'dbName = ', dbName )
print( 'dbUser = ', dbUser )
print( 'dbPass = ', dbPass )
print( 'passwordArg = ', passwordArg )
### print( 'hostName = ', hostName )
### print( 'dateString = ', dateString )
print( 'dbBackupDirectory = ', dbBackupDirectory )
print( 'dbBackupFileFullName = ', dbBackupFileFullName )
print( 'backupCommand = ', backupCommand )
### print( 'chmodCommand = ', chmodCommand )

print( 'Backing up DB for site', siteName, 'to', dbBackupFileFullName, '...' )

## call( backupCommand, shell=True )
## call( chmodCommand, shell=True )

