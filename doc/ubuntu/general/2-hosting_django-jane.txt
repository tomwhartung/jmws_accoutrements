
 Hosting Django - Setup
========================

This is the process we are running to set up jane.

It should be perfectly usable on bette and lauren, when we get to that.

2016-10-05 - Install and configure wsgi for serving django sites
----------------------------------------------------------------

[ ] Install apache mod_wsgi
    We need a plan for getting the versions right and all
[ ] References: the following urls are most important; see 0-install_ubuntu.urls for a
    comprehensive list of links to valuable information about this process
    The starting point:
        https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/modwsgi/
    I think we want to use daemon mode:
        https://docs.djangoproject.com/en/1.10/topics/install/#install-apache-and-mod-wsgi
    And I think we want to install the latest version:
        https://modwsgi.readthedocs.io/en/develop/installation.html
    Because although it is available via apt-get:
        apt-get install -s libapache2-mod-wsgi-py3   ## found package name via digitalocean link
    It is, like he says, a fairly old version:
        apt-cache policy libapache2-mod-wsgi-py3     ## Candidate: 4.3.0-1.1build1
    Version 4.5.7 is avaiable on github:
        https://github.com/GrahamDumpleton/mod_wsgi/releases
    And on pypi.python.org:
        https://pypi.python.org/pypi/mod_wsgi
    That page looks to be a better-formated version of this one:
        https://github.com/GrahamDumpleton/mod_wsgi
    The pypi.python.org stuff seems focused on "the new way," using mod_wsgi-express,
    which looks like it was meant more for use on development hosts, especially when running docker.
[ ] First get mod-wsgi "Hello World" example working
    Starting here:
         https://modwsgi.readthedocs.io/en/develop/getting-started.html
    Requirements:
        "It is highly recommended that you use Apache 2.4"
    apache2 -v   ## Server version: Apache/2.4.18 (Ubuntu)
    Requirements (cont'd):
        "If your Python web application doesn’t comply properly with the WSGI specification,
         then it may fail to run or may run sub optimally...."
    Installation:
        As noted above, we want to install the latest version
    Installation -> Quick Installation Guide -> Apache Requirements
        "On Linux systems, if Apache has been installed from a package repository, you must have
         installed the corresponding Apache “dev” package as well."
    Synaptic -> Search for apache2 -> If dev package not installed, mark it for installation -> Apply
    Quick Installation Guide -> Python Requirements
        "On Linux systems, if Python has been installed from a package repository, you must have
         installed the corresponding Python “dev” package as well."
    Synaptic -> Search for python -> If dev package not installed, mark it for installation -> Apply
    Synaptic -> Search for python3 -> If dev package not installed, mark it for installation -> Apply
    Quick Installation Guide -> Downloading, Unpacking and Configuring
        Download current version (4.5.7) from github, unpack, and follow configuration instructions:
            https://github.com/GrahamDumpleton/mod_wsgi/releases
    First try: using python3 - specifying it in ./configure command below
        https://docs.djangoproject.com/en/1.10/faq/install/
        "If you’re starting a new project, and the dependencies you plan to use work on Python 3,
         you should use Python 3. If they don’t, consider contributing to the porting efforts, or stick to Python 2.
        cd /var/www/learn/django/github/customizations/always_learning_python/
        cd downloads/
        cp ~/Downloads/mod_wsgi-4.5.7.tar.gz .
        git add mod_wsgi-4.5.7.tar.gz
        git commit 'Adding downloaded mod_wsgi-4.5.7.tar.gz because I want to be sure I have a copy of the exact file I am installing.'
        git push origin master
        cd ../3-mod_wsgi
        mkdir unpack        ## assuming "unpack" is in the .gitignore file - we do not want to commit any of this to github!
        cd unpack
        cp ../../downloads/mod_wsgi-4.5.7.tar.gz .
        tar -xvzf mod_wsgi-4.5.7.tar.gz
        l
        cd mod_wsgi-4.5.7/
        l
    Quick Installation Guide -> Configuring the Source Code
        ./configure --with-apxs=/usr/bin/apxs --with-python=/usr/bin/python3   ## config.status: creating Makefile
        echo $?   ## exit status: 0
    Quick Installation Guide -> Building the Source Code
        make
        echo $?   ## exit status: 0
        sudo make install
        ### ----------------------------------------------------------------------
        ### Libraries have been installed in:
        ###    /usr/lib/apache2/modules
        ###
        ### If you ever happen to want to link against installed libraries
        ### in a given directory, LIBDIR, you must either use libtool, and
        ### specify the full pathname of the library, or use the `-LLIBDIR'
        ### flag during linking and do at least one of the following:
        ###    - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
        ###      during execution
        ###    - add LIBDIR to the `LD_RUN_PATH' environment variable
        ###      during linking
        ###    - use the `-Wl,-rpath -Wl,LIBDIR' linker flag
        ###    - have your system administrator add LIBDIR to `/etc/ld.so.conf'
        ###
        ### See any operating system documentation about shared libraries for
        ### more information, such as the ld(1) and ld.so(8) manual pages.
        ### ----------------------------------------------------------------------
    Quick Installation Guide -> Loading Module Into Apache
        sudo su -
        cd /etc/apache2/mods-available/
        more *.load         # many are one-liners
        vi wsgi.load
        cat wsgi.load       # contents: only this one line
        LoadModule wsgi_module modules/mod_wsgi.so
        a2enmod wsgi
        service apache2 stop
        service apache2 start
        systemctl status apache2.service    # used to identify error ('/usr/lib/apache2/' missing path)
        systemctl status apache2.service > /tmp/apache_error.txt
        cat /tmp/apache_error.txt
        l /usr/lib/apache2/modules/mod_wsgi.so
        vi wsgi.load
        cat wsgi.load       # contents: only this one line (corrected version)
        LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so
        service apache2 restart
        upapa
        mkdir RCS
        ci -l wsgi.load
    Quick Configuration Guide - getting the "Hello World" wsgi app to run:
        https://modwsgi.readthedocs.io/en/develop/user-guides/quick-configuration-guide.html
        Using daemon mode, as proposed above, even though it does not seem to make much difference
        See the 3-mod_wsgi directory in the always_learning_python repo, especially the README.md file.
            https://github.com/tomwhartung/always_learning_python/tree/master/3-mod_wsgi
            https://github.com/tomwhartung/always_learning_python/blob/master/3-mod_wsgi/README.md
        Also see the configuration on jane:
            /etc/apache2/sites-available/150-wsgi.test.conf
        Note that to get this to work, I had to add the following line to /etc/hosts :
            127.0.1.1	jane.wsgi.test
[ ] OK!  Now to get mod_wsgi to work with Django!
    Update /etc/apache2/sites-available/050-seeourminds.com.conf , combining
    - what we have in /etc/apache2/sites-available/150-wsgi.test.conf with
    - the django-specific information here:
        https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/modwsgi/






[ ] Review Deployment Checklists
    For a few of these that we have found along the way, see
    0-install_ubuntu.urls
 
