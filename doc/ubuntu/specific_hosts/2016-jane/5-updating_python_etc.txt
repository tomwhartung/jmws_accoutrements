
 Updating Python Etc.
======================
We are playing around with some python on bette, and want to have
our process down for when it comes time to upgrade the installations
on jane, barbara, and ava.

Running these commands on jane.
--------------------------------
NOTE:
It appears we need version 0.12 of flask for the test_insert_functions function
in db_access.py to work.

NOTE:
We will want to upgrade these packages on barbara and ava when deploying!

NOTE:
We need to be very cognizant of what versions of python, flask, and django we are
running on the servers!

NOTE:
We may want to consider using virtual environments on the servers at some point.
However, I would like to avoid doing that, in the interest of keeping it simple.

Upgrade Python
--------------
[ ] Upgrade python 3.5 to 3.6
    References:
      http://askubuntu.com/questions/865554/how-do-i-install-python-3-6-using-apt-get
      http://www.ubuntumaniac.com/2016/12/python-360-is-released-install-on.html
    As root:
      add-apt-repository ppa:jonathonf/python-3.6
      apt-get update
      apt-get install python3.6

Upgrade Flask
-------------
[ ] Upgrade flask to version 0.12
    (This is a little trick I learned in the real python class.)
    As root:
      pip3 uninstall flask
      pip3 install flask==0.12

Install sendmail for groja.com
------------------------------
We need sendmail on all servers so we can use python to send emails:
Note that this fixes the following error:
    ConnectionRefusedError: [Errno 111] Connection refused
[ ] Install sendmail
    As root:
      apt-get update
      apt-get upgrade -y
      apt-get -y install sendmail
NOTE: Got the following warning when installing sendmail on jane
      (and all the others too, btw):
   "Warning: 3 database(s) sources
      were not found, (but were created)
      please investigate."
Tried googling this but did not see anything about how to fix it.

Install PostgreSQL Database for Storing SeeOurMinds.com Quiz Results
--------------------------------------------------------------------
References:
* https://www.digitalocean.com/community/tutorials/how-to-use-postgresql-with-your-django-application-on-ubuntu-16-04
* https://djangogirls.gitbooks.io/django-girls-tutorial-extensions/content/optional_postgresql_installation/
* https://wiki.postgresql.org/wiki/Detailed_installation_guides#General_Linux

[ ] Install postgres in ubuntu:
    As root:
      apt-get update
      dpkg-query --list python3-pip  # ii  python3-pip ...
      dpkg-query --list python3-dev  # ii  python3-dev ...
      dpkg-query --list libpq-dev    # dpkg-query: no packages found matching libpq-dev
      apt-get install libpq-dev postgresql postgresql-contrib
[ ] Enter the postgres shell:
    As root:
      su - postgres
      psql        # prompt changes
[ ] Use the postgres shell to create the user and database:
    In the postgres shell:
      CREATE USER som_user WITH PASSWORD 'abc123';
      CREATE DATABASE som_db owner som_user;
      ALTER ROLE som_user SET client_encoding TO 'utf8';
      ALTER ROLE som_user SET default_transaction_isolation TO 'read committed';
      ALTER ROLE som_user SET timezone TO 'MST';
      \q      ## log out
[ ] Install python postgres "psycopg2" package globally:
    As root:
       pip3 install psycopg2
[ ] Verify installation of python postgres "psycopg2" package:
    As tomh:
      python3 -c "import psycopg2"    ## no errors means it worked
      python3
      >>> import psycopg2
      >>> psycopg2.__version__        ## '2.7.1 (dt dec pq3 ext lo64)'

Install PhpPgAdmin
------------------
References:
* https://www.howtoforge.com/tutorial/ubuntu-postgresql-installation/
* https://tecadmin.net/install-phppgadmin-in-ubuntu/

We are following the instructions in the first reference.
The second reference supports slightly stronger security measures.

** DO NOT FOLLOW THIS PROCEDURE ON PRODUCTION HOSTS **

[ ] Use psql to set a password for the postgres user:
    As root:
      su - postgres
      psql          ## 'psql (9.5.6)' and 'Type "help" for help.'
    At the 'postgres=#' prompt:
      postgres=# \password
      Enter new password:
      Enter it again:
[ ] Install phppgadmin in ubuntu:
    As root:
      apt-get update
      apt-get install -y phppgadmin
[ ] Configure apache:
    As root:
      cd /etc/apache2/conf-available/
      mkdir RCS
      ci -l phppgadmin.conf    ## 'Installed version.'
      vi phppgadmin.conf
    Make these edits (so that you can access from your browser):
    o Comment out the line `#Require local` (line 11)
    o Add the line `Allow From all` below that (line 12)
[ ] Configure phpPgAdmin:
    As root:
      cd /etc/phppgadmin/
      mkdir RCS
      ci -l config.inc.php     ## 'Installed version.'
      vi config.inc.php
    Make this edit (so you can login to phpPgAdmin with user postgres):
    o Find the line $conf['extra_login_security'] = true; and change the value to false
[ ] Restart apache and postgres:
    As root:
      systemctl restart postgresql
      systemctl restart apache2
[ ] Access in browser:
      http://127.0.0.1/phppgadmin/
      http://localhost/phppgadmin/
    Log in as 'postgres' , using password set above

