
 Looking at Three Popular LAMP CMSes From a Developer's Perspective
===================================================================
Adding Device Detection to Joomla, WordPress, and Drupal: Compare and Contrast

What I did on my summer code-cation (that lasted well into the winter, thanks in large part to Drupal 8).

 Introduction
--------------
What:
Implemented Adaptive Web Design (as opposed to Responsive Web Design) by adding Device Detection to Drupal 7 & 8, Joomla, and WordPress

Why (other than "because it's there"):
o Have been curious about Drupal for many years.
o Want to find where I want to be in the new gadget-laden technological environment. (1)
o Frankly, it does not make much business sense to take the better part of a year off to do this. (2)
o But I have learned what my ideal job (this year, anyway) would be (see conclusion).

How:

 Caveat/Disclaimer
-------------------
I am not an expert in any one of these.
Being so seems to preclude the ability to be objective, which is my goal.
I have more experience in Joomla than the others, and like it best, and cannot say for sure whether the experience is prejudicing me....

 Miscellaneous Thoughts Had While Working on Other Things
----------------------------------------------------------
Joomla: the Goldilocks CMS: not too wordpressy/php4 time bomb, not too drupally/complicated, just right?

 Details
---------
By the numbers:
o download size,
o number of files,
o number of DB tables,
o lines of css

Hi-Level/Overview:
o Drupal 7: hooks
o Drupal 8: Symfony used for modules, themes still use mainly hooks
o Joomla:
o Wordpress: hooks

Finding documentation:
o Drupal 7: 
o Drupal 8: When I was working on it, much was missing and incomplete.  It's nice that they tell you when pages "Need Work."
o Joomla:
o Wordpress:

Extension Types:
o Drupal 7: modules and themes
o Drupal 8: modules and themes
o Joomla: components, modules, templates, plugins (not the same as WP plugins), and libraries
o Wordpress: plugins and themes

Adding options:
All are different:
o Drupal 7: array based
o Drupal 8: OOP and array based
o Joomla: xml-based)
o Wordpress: array based

Finding markup:
o Drupal 7: 
o Drupal 8: When I was working on it, much was missing and incomplete.  It's nice that they tell you when pages "Need Work."
o Joomla:
o Wordpress:

again, joomla is different, having a "mainline" in index.php
wp and drupal use templates, which is a little confusing at first, but easy enough once you get going
Drupal Reference: https://www.drupal.org/node/190815

Managing js and css:
Much more difficult than it should be!
The CMS wants to control that for you.
It should be OK to just include a link tag, and I suppose you could, but that is not what you are supposed to do.
Instead, each has its vastly different "super clever" way of doing things.  Uhg what a pain.
o Drupal 7: 
o Drupal 8:
o Joomla:
o Wordpress: enqueue something

Community:
Drupal seems to have the most closely-knit community, with many conferences.
Tried to create an account on joomla.org several times, to no avail
Was able to create one easily on drupal.org and wordpress.org.

XXXXXX:
o Drupal 7: 
o Drupal 8:
o Joomla:
o Wordpress:

 Challenges:
-------------
Multiple IDEs
o Drupal coding standards

 Recommendations:
------------------
If I was going to do this again, I would do Drupal first.
o It forces (or at least strongly encourages and enables) you to organize your code better (e.g., namespaces)
o The others (especially WP) would be a piece of cake

It is much easier to find a simplistic, minimal template and add device detection to that first, then work on one that is more complicated.

In a case like this, where I am inventing the process as I go, it is nice when I can work on things in parallel.
E.g., add the module/library to each CMS, instantiate and initialze device detection in all CMSes, add css to all templates/themes, add js to all templates/themes, add the options, update the html, etc.

 Summary/Conclusions:
----------------------
If trying to learn WordPress, Drupal, and jQuery Mobile all at the same time sound challenging, I can say that yes, it is.

I was able to use quite a bit of code, more than expected, on all three.

I really did not need to set up separate repos for the different CMSes; branching would have been a better solution.

Doing two templates/themes at a time is a good idea, if one is simpler (do it first) than the other.

Not a fan of the draconian drupal code standards.  Makes using the same IDE for wp a pain (have to change the options all too frequently).

Making use of inheritance in separating what works for all of them from the CMS-specific functionality, is huge fun for me.

Adding the jQuery Mobile data role attributes was particularly fun (same for all, but go in different places, so easy and hard at the same time).



 Notes:
--------
(1) I was reading a lot of the O'Reilly books and was very intrigued by some information about device detection in Building Android Apps with CSS, JavaScript, and HTML5 by Jonathan Stark, which has some information about device detection in an appendix.
(2) I keep reading in various email newsletters I get, about how more and more people are freelancing, and must admit it holds a certain appeal....

