
 Performing a Fresh Install
============================
Download correct iso file, verify md5sum, and burn to CD

This is the process we are running to set up jane.
--------------------------------------------------
It should be perfectly usable on bette and lauren, when we get to that.

 On Old System, Before Install:
--------------------------------
[ ] Backup all DBs and home directory:
   bua
   tarHome
[ ] Find spare disk partitions that can be used for install

 Install:
----------
[ ] Check checkboxes:
   [ ] Download updates while installing
   [ ] Install third-party software

 On New System, After Install:
-------------------------------
[ ] Re-using /home (*), /usr/local/bin , /usr/local/tar , and /var/www
    After copying to / (root) partition of 14.04 install.
[ ] Update system, reboot

[ ] Set up root account: .bashrc, links to .bash_aliases*
[ ] Install rcs, synaptic, vim, openssh-server
[ ] Install subversion, git, git-svn, (??git-stuff, git-magic??)
[ ] Set preferences, lock terminal and firefox to launcher
[ ] Set terminal double-click word boundary preferences
    Either: Edit -> Profile Preferences -> General -> Select by word characters
    Or: use dconf command, e.g.:
       dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/word-char-exceptions '@ms "?_+~·:"'
    Reference: http://unix.stackexchange.com/questions/174728/gnome-classic-terminal-mouse-double-click-selection

[ ] Copy /etc/hosts from old install and setup static IP
[ ] Check /etc/hosts and /etc/fstab into RCS
   Disk Space Spotchec - / and /home - ensure we have enough

[ ] Install fortune-mod, fortunes, other fortune* packages as desired
[ ] Install xscreensaver, xscreensaver-data-extra
[ ] Install xscreensaver-gl-extra (?? defunct in 16.04: xscreensaver-screensaver-diz ??)
[ ] Install unity-tweak-tool
    apt-get install unity-tweak-tool
[ ] Lock xscreensaver and unity-tweak-tool to launcher
[ ] Remove gnome-screensaver
    apt list gnome-screensaver
    apt-get remove gnome-screensaver
[ ] Add xscreensaver to startup programs
    gnome-session-properties
[ ] Update System Settings -> Brightness & Lock
[ ] Update System Settings -> Power
[ ] Check man page for other steps needed to get it working at startup
    man xscreensaver

[ ] Install apache2, apache2-utils,
[ ] Install php7.0, php7.0-gd, php7.0-mysql, php7.0-mcrypt
[ ] Install mysql-server,
[ ] Enable mod_rewrite and php7.0, and start apache2 (as root):
   ### cd /etc/apache2/mods-enabled
   ### ln -s ../mods-available/rewrite.load .
   a2enmod rewrite
   a2enmod php7.0
   a2dismod mpm_event
   a2enmod mpm_prefork
   service apache2 start
[ ] Get all websites' source files in /var/www
[ ] Config files in /etc/apache2/sites-avaialble
->  For 16.04, copy conf files from jane:
    Already vetted currently used versions against the new 000-default.conf for 16.04, no changes needed!
[ ] Fix ServerAlias specifications in apache2/sites-available/*.conf files
   For jane: ensure both www.site.com and site.com will work
   For bette: change "jane" to "bette" in conf files
   Disk Space Spotcheck - / and /home - ensure we have plenty left

[ ] ln -s /art/images ~/Pictures
[ ] Install chrome and chromium-browser
    Download the .deb file for chrome and install by double-clicking on it.
(*) NOTE: was unable to run chrome after installing it.
    Had issues with chrome, thought they were specific to my 14.04 install
    *** Had to start with a copy of the newly-installed /home/tomh
[ ] Disable annoying popup asking for password to unlock keyring
    See #10 on this list of tips:
        https://sites.google.com/site/easylinuxtipsproject/tips

[ ] System Settings -> Automatically check for updates -> Every two weeks
[ ] Create and populate databases: see database_checklist.txt
[ ] Get sites running: see site_checklist.txt
[ ] For joomla on a fresh install of 16.04, install simplexml:
    Check for it in phpinfo.php
       sudo apt-get install php7.0-simplexml
       sudo service apache2 restart
    Reference: http://forum.joomla.org/viewtopic.php?t=916040
[ ] Configure wordpress updates
[ ] Set up backups

2016-10-05 - Install and configure wsgi for serving django sites
----------------------------------------------------------------
[ ] Install apache mod_wsgi
    We need a plan for getting the versions right and all
[ ] References: the following urls are most important; see 0-install_ubuntu.urls for a
    comprehensive list of links to valuable information about this process
    The starting point:
        https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/modwsgi/
    I think we want to use daemon mode:
        https://docs.djangoproject.com/en/1.10/topics/install/#install-apache-and-mod-wsgi
    And I think we want to install the latest version:
        https://modwsgi.readthedocs.io/en/develop/installation.html
    Because although it is available via apt-get:
        apt-get install -s libapache2-mod-wsgi-py3   ## found package name via digitalocean link
    It is, like he says, a fairly old version:
        apt-cache policy libapache2-mod-wsgi-py3     ## Candidate: 4.3.0-1.1build1
    Version 4.5.7 is avaiable on github:
        https://github.com/GrahamDumpleton/mod_wsgi/releases
    And on pypi.python.org:
        https://pypi.python.org/pypi/mod_wsgi
[ ] First get mod-wsgi "Hello World" example working
    Starting here:
         https://modwsgi.readthedocs.io/en/develop/getting-started.html
    Requirements:
        "It is highly recommended that you use Apache 2.4"
    apache2 -v   ## Server version: Apache/2.4.18 (Ubuntu)
    Requirements (cont'd):
        "If your Python web application doesn’t comply properly with the WSGI specification,
         then it may fail to run or may run sub optimally...."
    Installation:
        As noted above, we want to install the latest version
    Installation -> Quick Installation Guide -> Apache Requirements
        "On Linux systems, if Apache has been installed from a package repository, you must have
         installed the corresponding Apache “dev” package as well."
    Synaptic -> Search for apache2 -> If dev package not installed, mark it for installation -> Apply
    Quick Installation Guide -> Python Requirements
        "On Linux systems, if Python has been installed from a package repository, you must have
         installed the corresponding Python “dev” package as well."
    Synaptic -> Search for python -> If dev package not installed, mark it for installation -> Apply
    Synaptic -> Search for python3 -> If dev package not installed, mark it for installation -> Apply
    Quick Installation Guide -> Downloading, Unpacking and Configuring
        Download current version (4.5.7) from github, unpack, and follow configuration instructions:
            https://github.com/GrahamDumpleton/mod_wsgi/releases
    cd /var/www/learn/django/github/customizations/always_learning_python/3-mod_wsgi
    




[ ] Review Deployment Checklists
    For a few of these that we have found along the way, see
    0-install_ubuntu.urls
 
---------------------------------------------
If installing on a server, you can stop here.
---------------------------------------------

[ ] cd /art; ln -s /media/ext4backupA/images ~/Pictures
[ ] Install audacious, easytag, audex, banshee, vlc media player
[ ] Install compizconf settings manager
[ ] Install gwenview, gimp, gthumb, screenshot
[ ] Install rhythmbox and thunderbird
[ ] Lock all or most (not using thunderbird on jane) of those to launcher
[ ] Lock disks [manager] to launcher
[ ] Confirm installation of image viewer xeyes (pre-installed??),
   Disk Space Spotcheck:
      /:     8.3G (48%)
      /home: 4.1G (25%)

[ ] Install nodejs: analysis and commands
    *** Which version of node to install, and installation method to use? ***
    2016-06-29: stable versions of node listed on wikipedia: 6.2.2 & 4.4.6 (LTS)
    2016-06-29: stable version  of npm  listed on wikipedia: 3.9.0
    2016-06-29: version of node installed on bette (14.04: obtained via wget): 4.2.3
    2016-06-29: version of npm  installed on bette (14.04: obtained via wget): 2.14.7
    2016-06-29: version of node available on jane in synaptic (16.04): 4.2.6
    2016-06-29: version of npm  available on jane in synaptic (16.04): (none!)
    2016-06-29: version of node available on jane in apt (16.04): 4.2.6
    2016-06-29: version of npm  available on jane in apt (16.04): 3.5.2
    2016-06-29: version of node available on lauren in synaptic (14.04 - production server): 0.10.37
    2016-06-29: version of npm  available on lauren in synaptic (14.04 - production server): 1.3.10
    2016-06-29: version of node available on lauren in apt (14.04 - production server): 0.10.37
    2016-06-29: version of npm  available on lauren in apt (14.04 - production server): 1.3.10
    --> On jane: use apt to install the current versions available for 16.04: 4.2.6 and 3.5.2
    As root:
        apt-get install nodejs
        cd /usr/bin
        ls -al node*    # verify we have no executable here named just "node"
        ln -s nodejs node
    Reference for installing using apt-get:
        https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04
[ ] Install npm
    As root:
        apt-get install npm
        npm set prefix /usr    # needed so it does not install CLIs in /usr/local
[ ] NODE AND NPM INSTALLATION NOTES:
        The installation process that I ran on bette (14.04), using wget:
        o  installed the node executable as /opt/node/bin/node
        o  installed the npm executable as /opt/node/bin/npm
        o  created a link in /usr/local/bin to /opt/node/bin/node
        o  created a link in /usr/local/bin to /opt/node/bin/npm
        --> I DO NOT LIKE THESE LINKS IN MY /usr/local/bin , BECAUSE I MANAGE THAT SEPARATELY!
        --> NEED TO CHANGE THE PREFIX:
        npm set prefix /usr
        The installation process that I ran on jane (16.04), using apt:
        o installed the node executable as nodejs in /usr/bin/nodejs
        o installed the npm  executable as npm    in /usr/bin/npm
        --> This is more like what I would expect - except I cannot run "node" on the command line.
        --> Hence the "ln -s nodejs node" command!
[ ] Node and npm installation - notes for the future:
    --> If we want to use this in production (on 14.04):
    -->    use wget to get that version,
    -->    OR upgrade server to 16.04
    --> In the future, consider using NVM
[ ] Install express
    Ubuntu 14.04 - as root:
        apt-get install node-express
    Ubuntu 16.04 - as root:
        ### npm install express            // do not think this is needed
        npm install -g express-generator   // allows running from command line
        cd /usr/bin
        ln -s /usr/local/lib/node_modules/express-generator/bin/express .
        which express
    All - as tomh:
        which express

2016-08-31 - Picking up the jane install where we left off
----------------------------------------------------------
[ ] Install java, jdk
   For java, there are two choices (see 0-install_ubuntu.urls)
   Installing the default installs the open java 8 jdk (not adding PPA for Oracle)
   As root:
      apt-get --simulate install default-jre
      apt-get install default-jre
   As tomh:
      which java
      java -version
[ ] Install netbeans
   Seeing version 8.1 in the "Software Updater" tool's search results
   Wikipedia calls 8.1 the current "stable release"
   In Software Updater (Search for netbeans) -> Click on Install
   Launch it when done
   Lock to Launcher
   Add PHP support:
   In NetBeans: Tools -> Plugins
   Settings tab: check NetBeans Distribution (and Certified Plugins)
   Available Plugins tab: Click on Check for Newest
      check HTML5 Kit, PHP, Twig Templates, and PHPUnit
      click on Install, Next, "I agree," Install, Finish
   Restart NetBeans
   In NetBeans: Tools -> Plugins
   Updates tab: click on Check for Updates
      Click on Update button, Next, "I agree," Update, Finish
[ ] Install eclipse
   Seeing version 3.8 in the "Software Updater" tool's search results
   Wikipedia calls 4.6 the current "stable release"
   Following process in link added to 0-install_ubuntu.urls
   Download installer for neon from http://www.eclipse.org/downloads/
   sudo mkdir /opt/eclipse
   sudo chown tomh /opt/eclipse
   mv eclipse-inst-linux64.tar.gz /opt/eclipse
   cd /opt/eclipse
   l
   mkdir install_neon
   mv eclipse-inst-linux64.tar.gz install_neon/
   cd install_neon/
   tar -xvzf eclipse-inst-linux64.tar.gz
   eclipse-installer/eclipse-inst   # runs installer
   Click on: Eclipse IDE for PHP Developers
   ** Changing folder from /home/tomh/eclipse/php-neon to /opt/eclipse/php-neon **
   Click on: Install
      Popup appears: "Do you trust these certificates?"
      Check the box and click continue (it finishes this time)
   Click on: Launch
   ** Changing workspace folder from /home/tomh/workspace to /opt/eclipse/workspace **
   Lock to Launcher
   Disk Space Spotcheck:
      /:     11.0G of 19G - 59%
      /home:  3.5G of 19G - 21%

[ ] Install phpmyadmin
   apt-get update
   apt-get install phpmyadmin php-mbstring php-gettext
   -> Select apache (the red block is a cursor, an asterisk appears when apache is selected)
   -> Configuring phpmyadmin dialog: do it now or later
      References: /usr/share/doc/phpmyadmin
      Select Yes
      "Please provide a password for myphpmyadmin to register with the database server."


*************** YOU ARE HERE (jane install) ***********************

Extra Credit (install as desired, if desired)
---------------------------------------------
[ ] Install opera
[ ] Install skype
   Disk Space Spotcheck: /: ?.?G; /home: ?.?G

[ ] Install
[ ] Install
[ ] 
[ ] 
[ ] 

